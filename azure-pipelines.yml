name: "$(BuildID).$(date:yyMMdd)"

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - content/.attachments/*

pool:
  vmImage: "ubuntu-latest"

variables:
  versionNumber: "0.1.$(Build.BuildNumber)"
  qaEnvironment: "cns-site-qa"
  prodEnvironment: "cns-site-prod"
  webArtifactName: chia-name-service

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: Build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - task: CmdLine@2
            inputs:
              workingDirectory: "$(Build.SourcesDirectory)"
              script: "yarn"
            displayName: "yarn"

          - task: CmdLine@2
            inputs:
              workingDirectory: "$(Build.SourcesDirectory)"
              script: "yarn build"
            displayName: "yarn build"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.SourcesDirectory)/dist/web"
              ArtifactName: "$(webArtifactName)"
              publishLocation: "Container"

  - stage: qa
    displayName: qa
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    dependsOn:
      - build
    jobs:
      - deployment: qadeploy
        displayName: qaDeploy
        timeoutInMinutes: 10
        cancelTimeoutInMinutes: 1
        environment: $(qaEnvironment)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: FtpUpload@2
                  inputs:
                    credentialsOption: "serviceEndpoint"
                    serverEndpoint: "cns_site_qa_ftp"
                    rootDirectory: "$(Pipeline.Workspace)/drop/b"
                    filePatterns: "**"
                    remoteDirectory: "/"
                    clean: false
                    cleanContents: false
                    preservePaths: true
                    trustSSL: false